{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\berryweatherforecastapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Search from \"./components/Search\";\nimport WeatherDisplay from \"./components/WeatherDisplay\";\nimport Forecast from \"./components/Forecast\";\nimport Error from \"./components/Error\";\nimport \"./App.css\";\nimport backgroundImage1 from \"./assets/3610831-uhd-3840-2160-30fps.mp4\";\nimport backgroundImage2 from \"./assets/12510986-3840-2160-60fps.mp4\";\nimport backgroundVideo3 from \"./assets/14094022-uhd-3840-2160-30fps-Tri.mp4\";\nimport backgroundVideo4 from \"./assets/4664992-uhd-3840-2160-30fps-Trim.mp4\";\nimport backgroundVideo5 from \"./assets/856572-uhd-3840-2160-25fps-Trim.mp4\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentBackground, setCurrentBackground] = useState(0);\n  const backgrounds = [backgroundImage1, backgroundImage2, backgroundVideo3, backgroundVideo4, backgroundVideo5];\n  const fetchWeather = async (city = \"Paris\") => {\n    setLoading(true);\n    try {\n      // Fetch weather data\n      const weatherResponse = await axios.get(`https://api.weatherapi.com/v1/current.json`, {\n        params: {\n          key: process.env.REACT_APP_WEATHER_API_KEY,\n          q: city\n        }\n      });\n      setWeatherData(weatherResponse.data);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error fetching data:\", err);\n      setError(\"Failed to fetch data\");\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentBackground(prev => (prev + 1) % backgrounds.length);\n    }, 20000);\n    fetchWeather();\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-container\",\n      children: backgrounds.map((bg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `background ${currentBackground === index ? \"active\" : \"\"}`,\n        style: {\n          backgroundImage: bg.endsWith(\".mp4\") ? \"none\" : `url(${bg})`\n        },\n        children: bg.endsWith(\".mp4\") && /*#__PURE__*/_jsxDEV(\"video\", {\n          className: \"background-video\",\n          autoPlay: true,\n          muted: true,\n          loop: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: bg,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"cloud\",\n          width: \"28\",\n          height: \"28\",\n          src: \"https://img.icons8.com/fluency/48/cloud.png\",\n          alt: \"cloud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Weather \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"content-span\",\n            children: \"Forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        onSearch: city => fetchWeather(city)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Error, {\n        message: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [weatherData && /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n          weatherData: weatherData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n          weatherData: weatherData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RqWmkvkndEgseIQC0Y4CmLflOTE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Search","WeatherDisplay","Forecast","Error","backgroundImage1","backgroundImage2","backgroundVideo3","backgroundVideo4","backgroundVideo5","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","weatherData","setWeatherData","loading","setLoading","error","setError","currentBackground","setCurrentBackground","backgrounds","fetchWeather","city","weatherResponse","get","params","key","process","env","REACT_APP_WEATHER_API_KEY","q","data","err","console","interval","setInterval","prev","length","clearInterval","className","children","map","bg","index","style","backgroundImage","endsWith","autoPlay","muted","loop","src","type","fileName","_jsxFileName","lineNumber","columnNumber","width","height","alt","onSearch","message","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/berryweatherforecastapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Search from \"./components/Search\";\r\nimport WeatherDisplay from \"./components/WeatherDisplay\";\r\nimport Forecast from \"./components/Forecast\";\r\nimport Error from \"./components/Error\";\r\nimport \"./App.css\";\r\n\r\nimport backgroundImage1 from \"./assets/3610831-uhd-3840-2160-30fps.mp4\";\r\nimport backgroundImage2 from \"./assets/12510986-3840-2160-60fps.mp4\";\r\nimport backgroundVideo3 from \"./assets/14094022-uhd-3840-2160-30fps-Tri.mp4\";\r\nimport backgroundVideo4 from \"./assets/4664992-uhd-3840-2160-30fps-Trim.mp4\";\r\nimport backgroundVideo5 from \"./assets/856572-uhd-3840-2160-25fps-Trim.mp4\";\r\n\r\nfunction App() {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentBackground, setCurrentBackground] = useState(0);\r\n\r\n  const backgrounds = [\r\n    backgroundImage1,\r\n    backgroundImage2,\r\n    backgroundVideo3,\r\n    backgroundVideo4,\r\n    backgroundVideo5,\r\n  ];\r\n\r\n  const fetchWeather = async (city = \"Paris\") => {\r\n    setLoading(true);\r\n    try {\r\n      // Fetch weather data\r\n      const weatherResponse = await axios.get(\r\n        `https://api.weatherapi.com/v1/current.json`,\r\n        {\r\n          params: { key: process.env.REACT_APP_WEATHER_API_KEY, q: city },\r\n        }\r\n      );\r\n      setWeatherData(weatherResponse.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(\"Error fetching data:\", err);\r\n      setError(\"Failed to fetch data\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentBackground((prev) => (prev + 1) % backgrounds.length);\r\n    }, 20000);\r\n\r\n    fetchWeather();\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"background-container\">\r\n        {backgrounds.map((bg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`background ${\r\n              currentBackground === index ? \"active\" : \"\"\r\n            }`}\r\n            style={{\r\n              backgroundImage: bg.endsWith(\".mp4\") ? \"none\" : `url(${bg})`,\r\n            }}\r\n          >\r\n            {bg.endsWith(\".mp4\") && (\r\n              <video className=\"background-video\" autoPlay muted loop>\r\n                <source src={bg} type=\"video/mp4\" />\r\n              </video>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"header-container\">\r\n          <img\r\n            className=\"cloud\"\r\n            width=\"28\"\r\n            height=\"28\"\r\n            src=\"https://img.icons8.com/fluency/48/cloud.png\"\r\n            alt=\"cloud\"\r\n          />\r\n          <h1>\r\n            Weather <span className=\"content-span\">Forecast</span>\r\n          </h1>\r\n        </div>\r\n        <Search onSearch={(city) => fetchWeather(city)} />\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : error ? (\r\n          <Error message={error} />\r\n        ) : (\r\n          <>\r\n            {weatherData && <WeatherDisplay weatherData={weatherData} />}\r\n            <Forecast weatherData={weatherData} />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}